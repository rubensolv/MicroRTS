/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai.synthesis.runners.exploitabilityEvaluation;

import ai.synthesis.runners.*;
import ai.synthesis.DslLeague.Runner.SettingsAlphaDSL;
import ai.synthesis.grammar.dslTree.builderDSLTree.BuilderDSLTreeSingleton;
import ai.synthesis.grammar.dslTree.interfacesDSL.iDSL;
import ai.synthesis.grammar.dslTree.utils.SerializableController;
import ai.synthesis.localsearch.CumulativeDoubleProgramSynthesis;
import ai.synthesis.localsearch.CumulativeSimpleProgramSynthesis;
import ai.synthesis.localsearch.DoublePortfolioSynthesis;
import ai.synthesis.localsearch.DoubleProgramSynthesis;
import ai.synthesis.localsearch.DoubleSketchPortfolioSynthesis;
import ai.synthesis.localsearch.DoubleSketchSynthesis;
import ai.synthesis.localsearch.LocalSearch;
import ai.synthesis.localsearch.Recovery_CumulativeSimpleProgramSynthesis;
import ai.synthesis.localsearch.SinglePortfolioSynthesis;
import ai.synthesis.localsearch.searchImplementation.CumulativeSAComposed;
import ai.synthesis.localsearch.searchImplementation.DetailedSearchResult;
import ai.synthesis.localsearch.searchImplementation.PortolioSimulatedAnnealing;
import ai.synthesis.localsearch.searchImplementation.SearchImplementation;
import ai.synthesis.localsearch.searchImplementation.SimulatedAnnealing;
import ai.synthesis.localsearch.searchImplementation.SinglePortolioSimulatedAnnealing;
import ai.synthesis.localsearch.searchImplementation.SketchPortolioSimulatedAnnealing;
import ai.synthesis.localsearch.searchImplementation.SketchSimulatedAnnealing;
import java.util.ArrayList;
import java.util.List;
import static java.util.stream.Stream.builder;

/**
 *
 * @author rubens
 */
public class PerformExploitEval {

    public static void main(String[] args) {
        String file = args[0];
        //String file = "dsl_1ce4b6ce-a2b4-4d85-8c52-fa3b6c2978a2_id_0.ser";
        String path = System.getProperty("user.dir").concat("/logs2/");
        List<iDSL> cum_ind = new ArrayList<>();
        //BuilderDSLTreeSingleton builder;
        //builder = BuilderDSLTreeSingleton.getInstance();
        CumulativeSAComposed search = new CumulativeSAComposed();

        SettingsAlphaDSL.setMode_debug(false);
        if (SettingsAlphaDSL.isMode_debug()) {
            System.err.println("---------MODE DEBUG ACTIVATED!---------");
        } else {
            System.err.println("---------MODE OFFICIAL ACTIVATED!---------");
        }
        System.err.println("Map " + SettingsAlphaDSL.get_map());
        System.err.println("File to be exploited = " + file);
        iDSL script1 = SerializableController.recoverySerializable(file, path);
        System.err.println("Script exploited = " + script1.translate());

        DetailedSearchResult results;
        cum_ind.add((iDSL) script1.clone());

        results = search.run(cum_ind, (iDSL) script1.clone(),
                SettingsAlphaDSL.get_number_sa_steps(), 2, script1);
        System.out.print("\n#######\n Evaluation with score: " + results.getWinner()
                + " pos S.A.:\n Script 1: "
                + results.getsBase().translate() + " \nScript2: "
                + results.getsWinner().translate()
                + "\n#######\n");
        
        SerializableController.saveSerializable(results.getsWinner(),
                "expl"+file.substring(0,42) + "_id_" + 0 + ".ser", path);

        for (int i = 1; i < SettingsAlphaDSL.get_number_alphaDSL_iterations(); i++) {
            if (results.getWinner() == 4.0f) {
                System.out.println("Best score reached.");
                SerializableController.saveSerializable(results.getsWinner(),
                        "dsl_exploit_"+file.substring(0,42)+ "_id_" + i + ".ser", path);
                break;
            }
            results = search.run(cum_ind, results.getsWinner(),
                    SettingsAlphaDSL.get_number_sa_steps(), 2, script1);
            System.out.print("\n#######\n Evaluation with score: " + results.getWinner()
                    + "\n iteration " + i + " pos S.A.:\n Script 1: "
                    + results.getsBase().translate() + " \nScript2: "
                    + results.getsWinner().translate()
                    + "\n#######\n");
            SerializableController.saveSerializable(results.getsWinner(),
                    "expl"+file.substring(0,42) + "_id_" + i + ".ser", path);
        }
    }

}
